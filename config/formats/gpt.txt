[INSTRUCTIONS]
The response must strictly follow the arrow-based bullet format.
No additional text, explanations, or formatting beyond what is shown in sample.
All modifications and code presented exactly as requested.

[EXAMPLES]
-> Implementing user profile feature with avatar support and form validation
-> Created new UserProfile component with state management and lifecycle hooks
-> src/components/UserProfile.js
```javascript
class UserProfile extends Component {
  constructor(props) {
    super(props);
    this.state = {
      name: props.name || '',
      email: props.email || '',
      avatar: props.avatar || 'default.png'
    };
  }

  handleSubmit(event) {
    event.preventDefault();
    if (this.validateForm()) {
      this.props.onUpdate(this.state);
    }
  }
}
```
-> Added CSS styles for profile layout and responsive design
-> src/styles/profile.css
```css
.profile-container {
  max-width: 800px;
  margin: 0 auto;
  padding: 20px;
}

.avatar {
  width: 150px;
  height: auto;
  border-radius: 50%;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}
```
-> Enhanced form validation utility with email and required field checks
-> src/utils/validation.js
```javascript
const validateEmail = (email) => {
  const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  return emailRegex.test(email);
};

const validateRequired = (value) => {
  return value !== null && value !== undefined && value.trim() !== '';
};

export { validateEmail, validateRequired };
