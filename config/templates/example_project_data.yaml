# example_project_data.yaml
# Ce fichier montre comment organiser les données du projet.
# L'objectif est de définir le nom du projet, les objectifs, les conventions de code, etc.

project_name: "Nom du projet ici"

objectives:
  - "Décrire objectif principal 1"
  - "Décrire objectif principal 2"
  - "Décrire objectif principal 3"

code_conventions:
  language_stack:
    frontend: "Nom de la stack frontend (ex: React, Angular, Vue...)"
    backend: "Nom de la stack backend (ex: Node.js, Express...)"
  directories_structure:
    frontend: "Chemins des répertoires frontend (ex: src/components, src/pages...)"
    backend: "Chemins des répertoires backend (ex: src/routes, src/controllers...)"
  coding_style:
    - "Règle de style 1"
    - "Règle de style 2"
    - "Règle de style 3"
    - "Règle de style 4"

privacy_and_legal:
  - "Règle de confidentialité ou légale 1"
  - "Règle de confidentialité ou légale 2"
  - "Règle de confidentialité ou légale 3"

performance_and_architecture:
  - "Règle de performance/architecture 1"
  - "Règle de performance/architecture 2"
  - "Règle de performance/architecture 3"

ux_guidelines:
  - "Ligne directrice UX 1"
  - "Ligne directrice UX 2"
  - "Ligne directrice UX 3"
  - "Ligne directrice UX 4"
  - "Ligne directrice UX 5"

advertising:
  - "Règle sur la publicité (ex: pub non-intrusive pendant la génération)"

evolutivity:
  - "Règle d'évolutivité 1"
  - "Règle d'évolutivité 2"
