project_name: "AI Prompt Tool"

objectives:
  - "Offrir une interface simple pour configurer le répertoire source, le format de sortie et la requête finale."
  - "Analyser automatiquement la structure du code et générer un prompt complet, intégrant contexte, objectifs et directives."
  - "Faciliter l’ajout de nouveaux formats de prompt, de nouvelles configurations, et permettre une évolution future du projet."

code_conventions:
  language_stack:
    frontend: "Vanilla JS, HTML, CSS"
    backend: "Node.js, Express"
  directories_structure:
    frontend: "web_ui (index.html, main.js, configuration.js, styles.css)"
    backend: "config, scripts, server.js"
  coding_style:
    - "Utiliser ES6+ (const, let, fonctions fléchées) pour le code JS."
    - "Commenter clairement les parties critiques."
    - "Séparer le code de configuration (config/) des scripts d'analyse (scripts/) et de l'interface (web_ui/)."
    - "Respecter une indentation cohérente, un style clair et lisible."

privacy_and_legal:
  - "Ne pas récupérer de données personnelles sensibles dans le code."
  - "Les fichiers de configuration doivent rester internes (aucune fuite vers l’extérieur)."
  - "Respecter les droits d’auteur pour toute dépendance tierce."

performance_and_architecture:
  - "L’analyse du code doit être rapide (quelques secondes), sans blocage."
  - "La génération du prompt final ne doit pas dépasser quelques secondes."
  - "Conserver une architecture modulaire permettant de facilement remplacer ou étendre les composants."

ux_guidelines:
  - "Interface web fullscreen, sans scroll global (overflow dans des zones dédiées)."
  - "Navigation fluide : choisir répertoire, format, requête, puis générer."
  - "Boutons et textes clairs, interface épurée."
  - "Retour visuel (messages de succès/erreur, alertes) dès que l’utilisateur interagit."
  - "Possibilité d’ajouter facilement de nouvelles sections ou pages si nécessaire."

advertising:
  - "Pas de publicité intrusive. Si ajoutée, elle doit être discrète et non perturber l’utilisateur."

evolutivity:
  - "Pouvoir ajouter de nouveaux formats (XML, JSON, Markdown, etc.) sans refondre l’architecture."
  - "Permettre l’ajout facile de nouvelles configurations (nouveaux fichiers YAML) et gérer leur sélection."
