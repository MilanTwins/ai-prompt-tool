project_name: "AI Prompt Tool"

objectives:
  - "Provide a simple interface to configure source directory, output format, and final request."
  - "Automatically analyze code structure and generate a complete prompt, integrating context, objectives, and guidelines."
  - "Facilitate the addition of new prompt formats, new configurations, and enable future project evolution."

code_conventions:
  language_stack:
    frontend: "Vanilla JS, HTML, CSS"
    backend: "Node.js, Express"
  directories_structure:
    frontend: "web_ui (index.html, main.js, configuration.js, styles.css)"
    backend: "config, scripts, server.js"
  coding_style:
    - "Use ES6+ (const, let, arrow functions) for JS code."
    - "Clearly comment critical sections."
    - "Separate configuration code (config/) from analysis scripts (scripts/) and interface (web_ui/)."
    - "Maintain consistent indentation, clear and readable style."

privacy_and_legal:
  - "Do not collect sensitive personal data in the code."
  - "Configuration files must remain internal (no external leaks)."
  - "Respect third-party dependency copyrights."

performance_and_architecture:
  - "Code analysis must be fast (few seconds), without blocking."
  - "Final prompt generation should not exceed a few seconds."
  - "Maintain a modular architecture allowing easy component replacement or extension."

ux_guidelines:
  - "Fullscreen web interface, no global scroll (overflow in dedicated areas)."
  - "Smooth navigation: select directory, format, request, then generate."
  - "Clear buttons and text, clean interface."
  - "Visual feedback (success/error messages, alerts) when user interacts."
  - "Ability to easily add new sections or pages as needed."

advertising:
  - "No intrusive advertising. If added, it must be discreet and not disrupt the user."

evolutivity:
  - "Ability to add new formats (XML, JSON, Markdown, etc.) without rebuilding the architecture."
  - "Enable easy addition of new configurations (new YAML files) and manage their selection."
